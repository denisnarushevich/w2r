<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $username
 * @property string $email
 * @property string $firstname
 * @property string $lastname
 * @property string $phone
 * @property string $salt
 * @property string $password
 * @property boolean $is_active
 * @property boolean $is_super_admin
 * @property timestamp $last_login
 * @property Doctrine_Collection $UserActivationCode
 * @property Doctrine_Collection $Comments
 * @property Doctrine_Collection $Card
 * @property Doctrine_Collection $Planner
 * @property Doctrine_Collection $Booking
 * @property Doctrine_Collection $Review
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method string              getUsername()           Returns the current record's "username" value
 * @method string              getEmail()              Returns the current record's "email" value
 * @method string              getFirstname()          Returns the current record's "firstname" value
 * @method string              getLastname()           Returns the current record's "lastname" value
 * @method string              getPhone()              Returns the current record's "phone" value
 * @method string              getSalt()               Returns the current record's "salt" value
 * @method string              getPassword()           Returns the current record's "password" value
 * @method boolean             getIsActive()           Returns the current record's "is_active" value
 * @method boolean             getIsSuperAdmin()       Returns the current record's "is_super_admin" value
 * @method timestamp           getLastLogin()          Returns the current record's "last_login" value
 * @method Doctrine_Collection getUserActivationCode() Returns the current record's "UserActivationCode" collection
 * @method Doctrine_Collection getComments()           Returns the current record's "Comments" collection
 * @method Doctrine_Collection getCard()               Returns the current record's "Card" collection
 * @method Doctrine_Collection getPlanner()            Returns the current record's "Planner" collection
 * @method Doctrine_Collection getBooking()            Returns the current record's "Booking" collection
 * @method Doctrine_Collection getReview()             Returns the current record's "Review" collection
 * @method User                setId()                 Sets the current record's "id" value
 * @method User                setUsername()           Sets the current record's "username" value
 * @method User                setEmail()              Sets the current record's "email" value
 * @method User                setFirstname()          Sets the current record's "firstname" value
 * @method User                setLastname()           Sets the current record's "lastname" value
 * @method User                setPhone()              Sets the current record's "phone" value
 * @method User                setSalt()               Sets the current record's "salt" value
 * @method User                setPassword()           Sets the current record's "password" value
 * @method User                setIsActive()           Sets the current record's "is_active" value
 * @method User                setIsSuperAdmin()       Sets the current record's "is_super_admin" value
 * @method User                setLastLogin()          Sets the current record's "last_login" value
 * @method User                setUserActivationCode() Sets the current record's "UserActivationCode" collection
 * @method User                setComments()           Sets the current record's "Comments" collection
 * @method User                setCard()               Sets the current record's "Card" collection
 * @method User                setPlanner()            Sets the current record's "Planner" collection
 * @method User                setBooking()            Sets the current record's "Booking" collection
 * @method User                setReview()             Sets the current record's "Review" collection
 * 
 * @package    stag
 * @subpackage model
 * @author     Rainmaker
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('username', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 128,
             ));
        $this->hasColumn('email', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 128,
             ));
        $this->hasColumn('firstname', 'string', 80, array(
             'type' => 'string',
             'length' => 80,
             ));
        $this->hasColumn('lastname', 'string', 80, array(
             'type' => 'string',
             'length' => 80,
             ));
        $this->hasColumn('phone', 'string', 14, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 14,
             ));
        $this->hasColumn('salt', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('password', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_super_admin', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));


        $this->index('name_idx', array(
             'fields' => 
             array(
              0 => 'username',
             ),
             'unique' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('UserActivationCode', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'id_client'));

        $this->hasMany('Card', array(
             'local' => 'id',
             'foreign' => 'id_client'));

        $this->hasMany('Planner', array(
             'local' => 'id',
             'foreign' => 'id_client'));

        $this->hasMany('Booking', array(
             'local' => 'id',
             'foreign' => 'id_client'));

        $this->hasMany('Review', array(
             'local' => 'id',
             'foreign' => 'id_client'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}