<?php

/**
 * BaseActivity
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_category
 * @property string $image
 * @property integer $default_price
 * @property integer $stars
 * @property string $name
 * @property text $description
 * @property text $summary
 * @property boolean $visible
 * @property string $firstname
 * @property string $lastname
 * @property string $phone
 * @property string $email
 * @property string $address
 * @property boolean $del
 * @property Doctrine_Collection $ActivityPrice
 * @property Doctrine_Collection $Comments
 * @property ActivityCategory $ActivityCategory
 * @property Doctrine_Collection $ExtraActivity
 * @property Doctrine_Collection $ExtraReserved
 * @property Booking $Booking
 * @property Doctrine_Collection $Slider
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method integer             getIdCategory()       Returns the current record's "id_category" value
 * @method string              getImage()            Returns the current record's "image" value
 * @method integer             getDefaultPrice()     Returns the current record's "default_price" value
 * @method integer             getStars()            Returns the current record's "stars" value
 * @method string              getName()             Returns the current record's "name" value
 * @method text                getDescription()      Returns the current record's "description" value
 * @method text                getSummary()          Returns the current record's "summary" value
 * @method boolean             getVisible()          Returns the current record's "visible" value
 * @method string              getFirstname()        Returns the current record's "firstname" value
 * @method string              getLastname()         Returns the current record's "lastname" value
 * @method string              getPhone()            Returns the current record's "phone" value
 * @method string              getEmail()            Returns the current record's "email" value
 * @method string              getAddress()          Returns the current record's "address" value
 * @method boolean             getDel()              Returns the current record's "del" value
 * @method Doctrine_Collection getActivityPrice()    Returns the current record's "ActivityPrice" collection
 * @method Doctrine_Collection getComments()         Returns the current record's "Comments" collection
 * @method ActivityCategory    getActivityCategory() Returns the current record's "ActivityCategory" value
 * @method Doctrine_Collection getExtraActivity()    Returns the current record's "ExtraActivity" collection
 * @method Doctrine_Collection getExtraReserved()    Returns the current record's "ExtraReserved" collection
 * @method Booking             getBooking()          Returns the current record's "Booking" value
 * @method Doctrine_Collection getSlider()           Returns the current record's "Slider" collection
 * @method Activity            setId()               Sets the current record's "id" value
 * @method Activity            setIdCategory()       Sets the current record's "id_category" value
 * @method Activity            setImage()            Sets the current record's "image" value
 * @method Activity            setDefaultPrice()     Sets the current record's "default_price" value
 * @method Activity            setStars()            Sets the current record's "stars" value
 * @method Activity            setName()             Sets the current record's "name" value
 * @method Activity            setDescription()      Sets the current record's "description" value
 * @method Activity            setSummary()          Sets the current record's "summary" value
 * @method Activity            setVisible()          Sets the current record's "visible" value
 * @method Activity            setFirstname()        Sets the current record's "firstname" value
 * @method Activity            setLastname()         Sets the current record's "lastname" value
 * @method Activity            setPhone()            Sets the current record's "phone" value
 * @method Activity            setEmail()            Sets the current record's "email" value
 * @method Activity            setAddress()          Sets the current record's "address" value
 * @method Activity            setDel()              Sets the current record's "del" value
 * @method Activity            setActivityPrice()    Sets the current record's "ActivityPrice" collection
 * @method Activity            setComments()         Sets the current record's "Comments" collection
 * @method Activity            setActivityCategory() Sets the current record's "ActivityCategory" value
 * @method Activity            setExtraActivity()    Sets the current record's "ExtraActivity" collection
 * @method Activity            setExtraReserved()    Sets the current record's "ExtraReserved" collection
 * @method Activity            setBooking()          Sets the current record's "Booking" value
 * @method Activity            setSlider()           Sets the current record's "Slider" collection
 * 
 * @package    stag
 * @subpackage model
 * @author     Rainmaker
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseActivity extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activity');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('id_category', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('default_price', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('stars', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('summary', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('visible', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('firstname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('lastname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('phone', 'string', 14, array(
             'type' => 'string',
             'length' => 14,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('address', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('del', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ActivityPrice', array(
             'local' => 'id',
             'foreign' => 'id_activity'));

        $this->hasMany('Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'id_activity'));

        $this->hasOne('ActivityCategory', array(
             'local' => 'id_category',
             'foreign' => 'id'));

        $this->hasMany('ExtraActivity', array(
             'local' => 'id',
             'foreign' => 'id_activity'));

        $this->hasMany('ExtraReserved', array(
             'local' => 'id',
             'foreign' => 'id_activity'));

        $this->hasOne('Booking', array(
             'local' => 'id',
             'foreign' => 'id_activity'));

        $this->hasMany('Slider', array(
             'local' => 'id',
             'foreign' => 'id_activity'));

        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'name',
              1 => 'description',
              2 => 'visible',
              3 => 'summary',
             ),
             ));
        $sluggable1 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'uniqueBy' => 
             array(
              0 => 'lang',
              1 => 'name',
             ),
             ));
        $i18n0->addChild($sluggable1);
        $this->actAs($i18n0);
    }
}