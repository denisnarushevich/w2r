<?php

/**
 * BaseBooking
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_client
 * @property integer $id_activity
 * @property integer $id_planner
 * @property date $date_begin
 * @property date $date_end
 * @property text $other_info
 * @property integer $nb_persons
 * @property enum $status
 * @property integer $log_price
 * @property User $User
 * @property Activity $Activity
 * @property Planner $Planner
 * @property Doctrine_Collection $ExtraReserved
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method integer             getIdClient()      Returns the current record's "id_client" value
 * @method integer             getIdActivity()    Returns the current record's "id_activity" value
 * @method integer             getIdPlanner()     Returns the current record's "id_planner" value
 * @method date                getDateBegin()     Returns the current record's "date_begin" value
 * @method date                getDateEnd()       Returns the current record's "date_end" value
 * @method text                getOtherInfo()     Returns the current record's "other_info" value
 * @method integer             getNbPersons()     Returns the current record's "nb_persons" value
 * @method enum                getStatus()        Returns the current record's "status" value
 * @method integer             getLogPrice()      Returns the current record's "log_price" value
 * @method User                getUser()          Returns the current record's "User" value
 * @method Activity            getActivity()      Returns the current record's "Activity" value
 * @method Planner             getPlanner()       Returns the current record's "Planner" value
 * @method Doctrine_Collection getExtraReserved() Returns the current record's "ExtraReserved" collection
 * @method Booking             setId()            Sets the current record's "id" value
 * @method Booking             setIdClient()      Sets the current record's "id_client" value
 * @method Booking             setIdActivity()    Sets the current record's "id_activity" value
 * @method Booking             setIdPlanner()     Sets the current record's "id_planner" value
 * @method Booking             setDateBegin()     Sets the current record's "date_begin" value
 * @method Booking             setDateEnd()       Sets the current record's "date_end" value
 * @method Booking             setOtherInfo()     Sets the current record's "other_info" value
 * @method Booking             setNbPersons()     Sets the current record's "nb_persons" value
 * @method Booking             setStatus()        Sets the current record's "status" value
 * @method Booking             setLogPrice()      Sets the current record's "log_price" value
 * @method Booking             setUser()          Sets the current record's "User" value
 * @method Booking             setActivity()      Sets the current record's "Activity" value
 * @method Booking             setPlanner()       Sets the current record's "Planner" value
 * @method Booking             setExtraReserved() Sets the current record's "ExtraReserved" collection
 * 
 * @package    stag
 * @subpackage model
 * @author     Rainmaker
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBooking extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('booking');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('id_client', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('id_activity', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('id_planner', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('date_begin', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('date_end', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('other_info', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('nb_persons', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'New',
              1 => 'InProgress',
              2 => 'Closed',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('log_price', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => true,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'id_client',
             'foreign' => 'id'));

        $this->hasOne('Activity', array(
             'local' => 'id_activity',
             'foreign' => 'id'));

        $this->hasOne('Planner', array(
             'local' => 'id_planner',
             'foreign' => 'id'));

        $this->hasMany('ExtraReserved', array(
             'local' => 'id',
             'foreign' => 'id_booking'));
    }
}