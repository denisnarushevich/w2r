<?php

/**
 * BaseMoney
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $money_name
 * @property string $money_curr
 * @property Doctrine_Collection $Langues
 * @property Doctrine_Collection $LanguesMoney
 * 
 * @method string              getMoneyName()    Returns the current record's "money_name" value
 * @method string              getMoneyCurr()    Returns the current record's "money_curr" value
 * @method Doctrine_Collection getLangues()      Returns the current record's "Langues" collection
 * @method Doctrine_Collection getLanguesMoney() Returns the current record's "LanguesMoney" collection
 * @method Money               setMoneyName()    Sets the current record's "money_name" value
 * @method Money               setMoneyCurr()    Sets the current record's "money_curr" value
 * @method Money               setLangues()      Sets the current record's "Langues" collection
 * @method Money               setLanguesMoney() Sets the current record's "LanguesMoney" collection
 * 
 * @package    stag
 * @subpackage model
 * @author     Rainmaker
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMoney extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('money');
        $this->hasColumn('money_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('money_curr', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Langues', array(
             'refClass' => 'LanguesMoney',
             'local' => 'money_id',
             'foreign' => 'langues_id'));

        $this->hasMany('LanguesMoney', array(
             'local' => 'id',
             'foreign' => 'money_id'));
    }
}