<?php

/**
 * BaseContact
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $email
 * @property string $name
 * @property string $surname
 * @property string $comment
 * @property enum $status
 * 
 * @method string  getEmail()   Returns the current record's "email" value
 * @method string  getName()    Returns the current record's "name" value
 * @method string  getSurname() Returns the current record's "surname" value
 * @method string  getComment() Returns the current record's "comment" value
 * @method enum    getStatus()  Returns the current record's "status" value
 * @method Contact setEmail()   Sets the current record's "email" value
 * @method Contact setName()    Sets the current record's "name" value
 * @method Contact setSurname() Sets the current record's "surname" value
 * @method Contact setComment() Sets the current record's "comment" value
 * @method Contact setStatus()  Sets the current record's "status" value
 * 
 * @package    stag
 * @subpackage model
 * @author     Rainmaker
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContact extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contact');
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('surname', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('comment', 'string', 65535, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 65535,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'New',
              1 => 'InProgress',
              2 => 'Closed',
             ),
             'notnull' => true,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}